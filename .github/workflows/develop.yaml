# https://www.freecodecamp.org/news/a-lightweight-tool-agnostic-ci-cd-flow-with-github-actions/
name: build-develop

on:
  push:
    branches:
      - develop
      - feature/**
    # https://stackoverflow.com/questions/62968897/is-it-possible-to-not-run-github-action-for-readme-updates/62972393#62972393
    paths-ignore:
      - '**/README.md'

jobs:
  test:
    name: Run Test Cases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Golang test
        run: make test

  build:
    name: Build CLI Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Golang build
        run: make local

      - name: Dockerized Cross-compile Build
        run: make build

      # Produces the binaries at the directory ./dist
      - name: Dockerized Binary Distribution
        run: make dist

      # https://docs.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts#passing-data-between-jobs-in-a-workflow
      - name: Upload MacOS Binary
        uses: actions/upload-artifact@v2
        with:
          name: cloner-darwin-amd64
          path: dist/cloner-darwin-amd64

      - name: Upload Linux Binary
        uses: actions/upload-artifact@v2
        with:
          name: cloner-linux-amd64
          path: dist/cloner-linux-amd64

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v2
        with:
          name: cloner-windows-amd64.exe
          path: dist/cloner-windows-amd64.exe

  # https://github.com/nightlark/ninja/blob/f1a33131154ae7d9648aa82afac462859535fb62/.github/workflows/release-ninja-binaries.yml#L8-L34
  verify:
    name: Verify CLI Binaries
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            bin_name: cloner-linux-amd64
          - os: macOS-latest
            bin_name: cloner-darwin-amd64
          - os: windows-latest
            bin_name: cloner-windows-amd64.exe
    steps:
      - name: Download artifact ${{ matrix.bin_name }} from build
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.bin_name }}

      # Install OS specific dependencies
      - name: Unix Binary Validation
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'
        env:
          BIN_NAME: ${{ matrix.bin_name }}
        run: |
          ls -la ./${BIN_NAME}
          chmod +x ./${BIN_NAME}
          file ./${BIN_NAME}
          ./${BIN_NAME}

      - name: Windows Binary Validation
        if: matrix.os == 'windows-latest'
        env:
          BIN_NAME: ${{ matrix.bin_name }}
        # https://stackoverflow.com/questions/53961802/how-to-use-an-environment-variable-in-powershell-command/53963070#53963070
        run: |
          dir
          echo $pwd\$env:BIN_NAME
          start-process -nonewwindow $pwd\$env:BIN_NAME

  push:
    name: Push CLI Docker Images
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_GITHUB_TOKEN }}

      # Publishes the Docker Images to Github Container Registry
      - name: Push Docker Images
        run: make docker-push-develop